"use client";
import { useState } from "react";
import {
  Badge,
  Button,
  Descriptions,
  DescriptionsProps,
  Divider,
  Empty,
  Flex,
  FloatButton,
  Progress,
  Rate,
  Skeleton,
  Tabs,
} from "antd";
import ImageForm from "./ImageForm";
import OverviewForm from "./OverviewForm";
// import ReviewList from "./ReviewList";
// import ComboList from "./ComboList";

export default function SellerProductDetail() {
  const productInfo = {
    _id: "string",
    name: "ROBOT H√öT B·ª§I LAU NH√Ä TH√îNG MINH ECOVACS DEEBOT OZMO T8 NEO B·∫¢N N·ªòI ƒê·ªäA",
    // attribute: {
    //   ....
    // }
    description: "string",
    originalPrice: 8900000,
    finalPrice: 4900000,
    category: "string",
    shopId: "string",
    // status: ENUM[AVAILABLE, SOLD_OUT, SALE];
    images: [
      {
        url: "https://i.insider.com/5f835d4ebab422001979aaeb",
      },
      {
        url: "https://bizweb.dktcdn.net/thumb/medium/100/391/225/products/t8max-1.jpg?v=1598201886260",
      },
      {
        url: "https://product.hstatic.net/200000805527/product/z3994157810128_ac5e199adba96c46d6d7282b2bfdcdc5-scaled_843ed368395649f6a68bc7c08dd20524_master.jpg",
      },
      {
        url: "https://product.hstatic.net/200000805527/product/z3994157835398_2b54a80e46f44a6d57b7a7500a87e49e-scaled_37202a4918fa4f03a6e275b8312f0587_master.jpg",
      },
    ],
    avgRating: 4.5,
    createdAt: "string",
  };

  const items: DescriptionsProps["items"] = [
    // key can be index, label is title, children is content
    // TODO: make span configurable?
    {
      key: "1",
      label: "Product",
      children: "ECOVACS DEEBOT OZMO T8 NEO",
    },
    {
      key: "2",
      label: "Usage Time",
      children: "2019-04-24 18:00:00",
      span: 2,
    },
    {
      key: "3",
      label: "Status",
      children: <Badge status="processing" text="Available" />,
    },
    {
      key: "4",
      label: "Negotiated Amount",
      children: "$80.00",
    },
    {
      key: "5",
      label: "Discount",
      children: "$20.00",
    },
    {
      key: "6",
      label: "Config Info",
      children: (
        <>
          Data disk type: MongoDB
          <br />
          Database version: 3.4
          <br />
          Package: dds.mongo.mid
          <br />
          Storage space: 10 GB
          <br />
          Replication factor: 3
          <br />
          Region: East China 1
          <br />
        </>
      ),
      span: 3,
    },
  ];

  // tabs, descriptions and review summary
  const tabItems = [
    {
      // label: `Descriptions`,
      label: "M√¥ t·∫£",
      key: "1",
      children: (
        <div className="p-2">
          <b>T·ªïng Quan: </b>
          Robot h√∫t b·ª•i ƒë√£ tr·ªü th√†nh m·ªôt ph·∫ßn kh√¥ng th·ªÉ thi·∫øu trong cu·ªôc s·ªëng
          hi·ªán ƒë·∫°i, v√† iRobot Roomba 980 l√† m·ªôt trong nh·ªØng s·ª± l·ª±a ch·ªçn h√†ng ƒë·∫ßu
          trong th·ªã tr∆∞·ªùng n√†y. V·ªõi nhi·ªÅu t√≠nh nƒÉng th√¥ng minh v√† hi·ªáu su·∫•t t·ªët,
          Roomba 980 h·ª©a h·∫πn mang l·∫°i s·ª± thu·∫≠n ti·ªán v√† s·∫°ch s·∫Ω cho gia ƒë√¨nh c·ªßa
          b·∫°n.
          <br />
          <b>Hi·ªáu Su·∫•t H√∫t B·ª•i: </b>
          Roomba 980 c√≥ m·ªôt h·ªá th·ªëng h√∫t b·ª•i m·∫°nh m·∫Ω v·ªõi c√¥ng ngh·ªá h√∫t
          AeroForce, gi√∫p l√†m s·∫°ch hi·ªáu qu·∫£ c·∫£ tr√™n c√°c b·ªÅ m·∫∑t c·ª©ng v√† th·∫£m. B·ªô
          c·∫£m bi·∫øn th√¥ng minh gi√∫p robot nh·∫≠n bi·∫øt c√°c khu v·ª±c b·∫©n v√† tƒÉng c∆∞·ªùng
          h√∫t ·ªü nh·ªØng v√πng ƒë√≥.
          <br />
          <b>T√≠nh NƒÉng Th√¥ng Minh: </b>
          V·ªõi t√≠nh nƒÉng ƒëi·ªÅu khi·ªÉn t·ª´ xa th√¥ng qua ·ª©ng d·ª•ng di ƒë·ªông, Roomba 980
          cho ph√©p b·∫°n ki·ªÉm so√°t v√† l·∫≠p l·ªãch tr√¨nh h√∫t b·ª•i m·ªôt c√°ch linh ho·∫°t.
          H·ªá th·ªëng ƒëi·ªÅu h∆∞·ªõng iAdapt 2.0 c√πng v·ªõi c√°c c·∫£m bi·∫øn gi√∫p robot tr√°nh
          va ch·∫°m v√† ƒëi·ªÅu h∆∞·ªõng th√¥ng minh trong kh√¥ng gian, tr√°nh c√°c v·∫≠t c·∫£n
          v√† l√™n c√°c b·ªÅ m·∫∑t kh√°c nhau m·ªôt c√°ch d·ªÖ d√†ng.
          <br />
          <b>Th·ªùi L∆∞·ª£ng Pin: </b>
          M·ªôt ƒëi·ªÉm y·∫øu nh·ªè c·ªßa Roomba 980 l√† th·ªùi l∆∞·ª£ng pin kh√¥ng ƒë∆∞·ª£c d√†i l√¢u
          nh∆∞ mong ƒë·ª£i. Trong ƒëi·ªÅu ki·ªán s·ª≠ d·ª•ng th√¥ng th∆∞·ªùng, pin c√≥ th·ªÉ ƒë·ªß cho
          vi·ªác h√∫t b·ª•i trong kho·∫£ng 1-2 gi·ªù, t√πy thu·ªôc v√†o c·∫•p ƒë·ªô s·∫°ch s·∫Ω c·ªßa
          kh√¥ng gian.
          <br />
          <b>D·ªÖ D√†ng V·ªá Sinh: </b>
          Vi·ªác v·ªá sinh v√† b·∫£o d∆∞·ª°ng Roomba 980 c≈©ng kh√° ƒë∆°n gi·∫£n. B·ªô l·ªçc v√†
          th√πng ch·ª©a b·ª•i d·ªÖ d√†ng th√°o r·ªùi v√† l√†m s·∫°ch. B·∫°n ch·ªâ c·∫ßn th∆∞·ªùng xuy√™n
          l√†m s·∫°ch c√°c ph·∫ßn n√†y ƒë·ªÉ ƒë·∫£m b·∫£o hi·ªáu su·∫•t h√∫t b·ª•i t·ªët nh·∫•t.
        </div>
      ),
    },
    {
      // label: `Technical Specifications`,
      label: "Th√¥ng s·ªë kƒ© thu·∫≠t",
      key: "2",
      children: <Descriptions bordered items={items} />,
    },
    {
      // label: `Review Summary`,
      label: `T·ªïng quan ƒë√°nh gi√°`,
      key: "3",
      children: (
        <div className="p-2">
          <Flex gap="small">
            <Rate
              disabled
              allowHalf
              defaultValue={4.5}
              style={{ padding: 5 }}
            />
            <div className="font-bold uppercase text-xl">4.5</div>
          </Flex>

          <div className="font-light pb-5">(10 ƒë√°nh gi√°)</div>
          {/* overview */}
          <Flex vertical gap="small" style={{ width: 300 }}>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={5}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={66} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={4}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={33} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={3}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={1} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={2}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={0} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={1}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={0} size="small" />
              </Flex>
            </Flex>
          </Flex>

          <div className="font-bold pt-5 text-lg">TechZone Assistant ü§ñ</div>

          <div className="font-semibold pt-5">
            T·ªïng quan ƒë√°nh gi√° kh√°ch h√†ng:
          </div>
          <div className="pt-2">
            T·ªïng th·ªÉ, iRobot Roomba 980 l√† m·ªôt s·ª± l·ª±a ch·ªçn t·ªët cho ng∆∞·ªùi ti√™u
            d√πng mu·ªën ƒë·∫ßu t∆∞ v√†o m·ªôt robot h√∫t b·ª•i th√¥ng minh v√† hi·ªáu qu·∫£. V·ªõi
            hi·ªáu su·∫•t h√∫t b·ª•i m·∫°nh m·∫Ω, t√≠nh nƒÉng th√¥ng minh v√† kh·∫£ nƒÉng v·∫≠n h√†nh
            linh ho·∫°t, Roomba 980 s·∫Ω gi√∫p gi·∫£m b·ªõt c√¥ng vi·ªác lau ch√πi v√† mang
            l·∫°i m·ªôt kh√¥ng gian s·ªëng s·∫°ch s·∫Ω h∆°n.
          </div>
        </div>
      ),
    },
  ];

  // combo
  const [combo, setCombo] = useState([]);

  // modal
  // const [open, setOpen] = useState(false);
  // const showModal = () => {
  //   setOpen(true);
  // };

  // toggle edit mode
  const [editable, setEditable] = useState(false);

  const [currentEditMode, setCurrentEditMode] = useState("");

  // methods
  const edit = (mode: string) => {
    setCurrentEditMode(mode);
    setEditable(true);
  };

  const save = () => {
    switch (currentEditMode) {
      case "image":
        //save

        break;
      case "overview":
        //save

        break;
      case "combo":
        //save

        break;
      case "description":
        //save

        break;
      default:
        break;
    }

    setEditable(false);
    setCurrentEditMode("");
  };

  const cancel = () => {
    setEditable(false);
    //create method to clear data?

    // switch (currentEditMode) {
    //   case "image":
    //     break;
    //   case "overview":
    //     break;
    //   case "combo":
    //     break;
    //   case "description":
    //     break;
    //   default:
    //     break;
    // }
    setCurrentEditMode("");
  };
  return (
    <div className="justify-between mx-10 lg:mx-20 gap-10 grid grid-cols-8">
      <div className="col-span-5 lg:col-span-6">
        {/* about product */}
        <div className="bg-white shadow-md flex lg:flex-row md:flex-row flex-col my-10">
          {/* image */}
          <ImageForm
            editable={editable}
            currentEditMode={currentEditMode}
            images={productInfo.images}
            name={productInfo.name}
          />

          {/* desc */}
          {(productInfo._id == null && (
            <Skeleton active style={{ margin: 10 }} />
          )) || (
            <OverviewForm
              editable={editable}
              currentEditMode={currentEditMode}
              name={productInfo.name}
              avgRating={productInfo.avgRating}
              originalPrice={productInfo.originalPrice}
              finalPrice={productInfo.finalPrice}
            />
          )}
        </div>
        {/* related products to buy with  */}
        <div className="font-semibold px-5 text-md">
          S·∫£n ph·∫©m c√≥ th·ªÉ k·∫øt h·ª£p
        </div>

        {combo.length == 0 && (
          <Empty
            image={Empty.PRESENTED_IMAGE_SIMPLE}
            description={<span>Kh√¥ng c√≥</span>}
          />
        )}

        {/* <ComboList
          totalPrice={totalPrice}
          totalComboPrice={totalComboPrice}
          updateTotalComboPrice={(price) => {
            setTotalComboPrice(price);
          }}
          comboIdList={comboIdList}
          setComboIdList={setComboIdList}
        /> */}

        {/* tabs, descriptions and review summary */}
        <div className="my-5">
          <Tabs
            defaultActiveKey="1"
            type="card"
            items={tabItems.map((item, i) => {
              //   const id = String(i + 1);
              return {
                label: item.label,
                key: item.key,
                children: item.children,
              };
            })}
          />
        </div>
      </div>
      <div className="bg-white shadow-md rounded-md h-fit col-span-3 lg:col-span-2 my-10">
        {(editable == false && (
          <Flex vertical gap="small">
            <div className="m-2 font-semibold"> C·∫≠p nh·∫≠t </div>

            <Button type="primary" ghost block onClick={() => edit("image")}>
              H√¨nh ·∫£nh
            </Button>
            <Button type="primary" ghost block onClick={() => edit("overview")}>
              Th√¥ng tin chung
            </Button>
            <Button type="primary" ghost block onClick={() => edit("combo")}>
              S·∫£n ph·∫©m k·∫øt h·ª£p
            </Button>
            <Button
              type="primary"
              ghost
              block
              onClick={() => edit("description")}
            >
              Th√¥ng tin chi ti·∫øt
            </Button>
          </Flex>
        )) || (
          <Flex vertical gap="small">
            <Button type="primary" ghost block onClick={() => save()}>
              L∆∞u thay ƒë·ªïi
            </Button>
            <Button type="primary" danger ghost block onClick={() => cancel()}>
              H·ªßy thay ƒë·ªïi
            </Button>
          </Flex>
        )}
      </div>
      <div className="col-span-5 lg:col-span-6">
        {/* reviews */}
        <Divider>Ph√¢n t√≠ch ƒë√°nh gi√° kh√°ch h√†ng</Divider>

        {/* <ReviewList /> */}

        <FloatButton.Group>
          <FloatButton.BackTop tooltip={<div>Move to Top</div>} />
        </FloatButton.Group>
      </div>
    </div>
  );
}

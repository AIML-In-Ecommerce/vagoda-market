"use client";
import { useEffect, useMemo, useState } from "react";
import {
  Badge,
  Descriptions,
  DescriptionsProps,
  Divider,
  Flex,
  FloatButton,
  List,
  Progress,
  Rate,
  Skeleton,
  Tabs,
} from "antd";
import ReviewList from "./ReviewList";
import FloatingCartForm from "./FloatingCartForm";
import { GiShoppingCart } from "react-icons/gi";
import ComboList from "./ComboList";
import Link from "next/link";
import CartSummaryModal from "./ProductSummaryModal";
import ReactImageMagnify from "react-image-magnify";

export default function ProductDetail() {
  const productInfo = {
    _id: "string",
    name: "ROBOT H√öT B·ª§I LAU NH√Ä TH√îNG MINH ECOVACS DEEBOT OZMO T8 NEO B·∫¢N N·ªòI ƒê·ªäA",
    // attribute: {
    //   ....
    // }
    description: "string",
    originalPrice: 8900000,
    finalPrice: 4900000,
    category: "string",
    shopId: "string",
    // status: ENUM[AVAILABLE, SOLD_OUT, SALE];
    images: [
      {
        url: "https://i.insider.com/5f835d4ebab422001979aaeb",
      },
      {
        url: "https://robothutbuisky.com/wp-content/uploads/2020/06/t8-max-100-1.jpg?v=1677693356",
      },
      {
        url: "https://product.hstatic.net/200000805527/product/z3994157810128_ac5e199adba96c46d6d7282b2bfdcdc5-scaled_843ed368395649f6a68bc7c08dd20524_master.jpg",
      },
      {
        url: "https://product.hstatic.net/200000805527/product/z3994157835398_2b54a80e46f44a6d57b7a7500a87e49e-scaled_37202a4918fa4f03a6e275b8312f0587_master.jpg",
      },
      {
        url: "",
      },
      {
        url: "",
      },
      {
        url: "",
      },
      {
        url: "",
      },
      {
        url: "",
      },
      {
        url: "",
      },
    ],
    avgRating: 4.5,
    createdAt: "string",
  };

  const items: DescriptionsProps["items"] = [
    // key can be index, label is title, children is content
    // TODO: make span configurable?
    {
      key: "1",
      label: "Product",
      children: "ECOVACS DEEBOT OZMO T8 NEO",
    },
    {
      key: "2",
      label: "Usage Time",
      children: "2019-04-24 18:00:00",
      span: 2,
    },
    {
      key: "3",
      label: "Status",
      children: <Badge status="processing" text="Available" />,
    },
    {
      key: "4",
      label: "Negotiated Amount",
      children: "$80.00",
    },
    {
      key: "5",
      label: "Discount",
      children: "$20.00",
    },
    {
      key: "6",
      label: "Config Info",
      children: (
        <>
          Data disk type: MongoDB
          <br />
          Database version: 3.4
          <br />
          Package: dds.mongo.mid
          <br />
          Storage space: 10 GB
          <br />
          Replication factor: 3
          <br />
          Region: East China 1
          <br />
        </>
      ),
      span: 3,
    },
  ];

  // tabs, descriptions and review summary
  const tabItems = [
    {
      // label: `Descriptions`,
      label: "M√¥ t·∫£",
      key: "1",
      children: (
        <div className="p-2">
          <b>T·ªïng Quan: </b>
          Robot h√∫t b·ª•i ƒë√£ tr·ªü th√†nh m·ªôt ph·∫ßn kh√¥ng th·ªÉ thi·∫øu trong cu·ªôc s·ªëng
          hi·ªán ƒë·∫°i, v√† iRobot Roomba 980 l√† m·ªôt trong nh·ªØng s·ª± l·ª±a ch·ªçn h√†ng ƒë·∫ßu
          trong th·ªã tr∆∞·ªùng n√†y. V·ªõi nhi·ªÅu t√≠nh nƒÉng th√¥ng minh v√† hi·ªáu su·∫•t t·ªët,
          Roomba 980 h·ª©a h·∫πn mang l·∫°i s·ª± thu·∫≠n ti·ªán v√† s·∫°ch s·∫Ω cho gia ƒë√¨nh c·ªßa
          b·∫°n.
          <br />
          <b>Hi·ªáu Su·∫•t H√∫t B·ª•i: </b>
          Roomba 980 c√≥ m·ªôt h·ªá th·ªëng h√∫t b·ª•i m·∫°nh m·∫Ω v·ªõi c√¥ng ngh·ªá h√∫t
          AeroForce, gi√∫p l√†m s·∫°ch hi·ªáu qu·∫£ c·∫£ tr√™n c√°c b·ªÅ m·∫∑t c·ª©ng v√† th·∫£m. B·ªô
          c·∫£m bi·∫øn th√¥ng minh gi√∫p robot nh·∫≠n bi·∫øt c√°c khu v·ª±c b·∫©n v√† tƒÉng c∆∞·ªùng
          h√∫t ·ªü nh·ªØng v√πng ƒë√≥.
          <br />
          <b>T√≠nh NƒÉng Th√¥ng Minh: </b>
          V·ªõi t√≠nh nƒÉng ƒëi·ªÅu khi·ªÉn t·ª´ xa th√¥ng qua ·ª©ng d·ª•ng di ƒë·ªông, Roomba 980
          cho ph√©p b·∫°n ki·ªÉm so√°t v√† l·∫≠p l·ªãch tr√¨nh h√∫t b·ª•i m·ªôt c√°ch linh ho·∫°t.
          H·ªá th·ªëng ƒëi·ªÅu h∆∞·ªõng iAdapt 2.0 c√πng v·ªõi c√°c c·∫£m bi·∫øn gi√∫p robot tr√°nh
          va ch·∫°m v√† ƒëi·ªÅu h∆∞·ªõng th√¥ng minh trong kh√¥ng gian, tr√°nh c√°c v·∫≠t c·∫£n
          v√† l√™n c√°c b·ªÅ m·∫∑t kh√°c nhau m·ªôt c√°ch d·ªÖ d√†ng.
          <br />
          <b>Th·ªùi L∆∞·ª£ng Pin: </b>
          M·ªôt ƒëi·ªÉm y·∫øu nh·ªè c·ªßa Roomba 980 l√† th·ªùi l∆∞·ª£ng pin kh√¥ng ƒë∆∞·ª£c d√†i l√¢u
          nh∆∞ mong ƒë·ª£i. Trong ƒëi·ªÅu ki·ªán s·ª≠ d·ª•ng th√¥ng th∆∞·ªùng, pin c√≥ th·ªÉ ƒë·ªß cho
          vi·ªác h√∫t b·ª•i trong kho·∫£ng 1-2 gi·ªù, t√πy thu·ªôc v√†o c·∫•p ƒë·ªô s·∫°ch s·∫Ω c·ªßa
          kh√¥ng gian.
          <br />
          <b>D·ªÖ D√†ng V·ªá Sinh: </b>
          Vi·ªác v·ªá sinh v√† b·∫£o d∆∞·ª°ng Roomba 980 c≈©ng kh√° ƒë∆°n gi·∫£n. B·ªô l·ªçc v√†
          th√πng ch·ª©a b·ª•i d·ªÖ d√†ng th√°o r·ªùi v√† l√†m s·∫°ch. B·∫°n ch·ªâ c·∫ßn th∆∞·ªùng xuy√™n
          l√†m s·∫°ch c√°c ph·∫ßn n√†y ƒë·ªÉ ƒë·∫£m b·∫£o hi·ªáu su·∫•t h√∫t b·ª•i t·ªët nh·∫•t.
        </div>
      ),
    },
    {
      // label: `Technical Specifications`,
      label: "Th√¥ng s·ªë kƒ© thu·∫≠t",
      key: "2",
      children: <Descriptions bordered items={items} />,
    },
    {
      // label: `Review Summary`,
      label: `T·ªïng quan ƒë√°nh gi√°`,
      key: "3",
      children: (
        <div className="p-2">
          <Flex gap="small">
            <Rate
              disabled
              allowHalf
              defaultValue={4.5}
              style={{ padding: 5 }}
            />
            <div className="font-bold uppercase text-xl">4.5</div>
          </Flex>

          <div className="font-light pb-5">(10 ƒë√°nh gi√°)</div>
          {/* overview */}
          <Flex vertical gap="small" style={{ width: 300 }}>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={5}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={66} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={4}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={33} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={3}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={1} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={2}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={0} size="small" />
              </Flex>
            </Flex>
            <Flex gap="small">
              <Rate
                disabled
                defaultValue={1}
                style={{ padding: 5, fontSize: 10 }}
              />
              <Flex gap="small" style={{ width: 180 }}>
                <Progress percent={0} size="small" />
              </Flex>
            </Flex>
          </Flex>

          <div className="font-bold pt-5 text-lg">TechZone Assistant ü§ñ</div>

          <div className="font-semibold pt-5">
            T·ªïng quan ƒë√°nh gi√° kh√°ch h√†ng:
          </div>
          <div className="pt-2">
            T·ªïng th·ªÉ, iRobot Roomba 980 l√† m·ªôt s·ª± l·ª±a ch·ªçn t·ªët cho ng∆∞·ªùi ti√™u
            d√πng mu·ªën ƒë·∫ßu t∆∞ v√†o m·ªôt robot h√∫t b·ª•i th√¥ng minh v√† hi·ªáu qu·∫£. V·ªõi
            hi·ªáu su·∫•t h√∫t b·ª•i m·∫°nh m·∫Ω, t√≠nh nƒÉng th√¥ng minh v√† kh·∫£ nƒÉng v·∫≠n h√†nh
            linh ho·∫°t, Roomba 980 s·∫Ω gi√∫p gi·∫£m b·ªõt c√¥ng vi·ªác lau ch√πi v√† mang
            l·∫°i m·ªôt kh√¥ng gian s·ªëng s·∫°ch s·∫Ω h∆°n.
          </div>
        </div>
      ),
    },
  ];

  // images
  type ImageInfoType = {
    width: number;
    height: number;
  };

  const [mainImage, setMainImage] = useState(productInfo.images[0].url);
  const [mainImageInfo, setMainImageInfo] = useState<ImageInfoType>({
    width: 0,
    height: 0,
  });

  useEffect(() => {
    function getMeta(url: string, callback: any) {
      const img = new Image();
      img.src = url;
      img.onload = function () {
        callback(img.width, img.height);
      };
    }
    getMeta(mainImage, (width: number, height: number) => {
      // alert(width + "px " + height + "px");
      let imageInfo = { width, height };
      setMainImageInfo(imageInfo);
    });
  }, [mainImage]);

  // number of reviews
  const [numberOfReview, setNumberOfReview] = useState(0);

  // price
  // number of main item
  const [numberOfItem, setNumberOfItem] = useState(1);

  // total combo price
  const [totalComboPrice, setTotalComboPrice] = useState(0);

  // combo id list
  const [comboIdList, setComboIdList] = useState<Array<string>>([]);

  const totalPrice = useMemo(() => {
    return numberOfItem * productInfo.finalPrice + totalComboPrice;
  }, [totalComboPrice, numberOfItem]);

  // modal
  const [open, setOpen] = useState(false);
  const showModal = () => {
    setOpen(true);
  };

  return (
    <div className="justify-between mx-10 lg:mx-20 gap-10 grid grid-cols-8 h-fit pb-10">
      <div className="col-span-5 lg:col-span-6">
        {/* about product */}
        <div className="bg-white shadow-md flex lg:flex-row flex-col my-10">
          <Flex vertical>
            <div className="m-2">
              <List
                grid={{ gutter: 20, column: 5 }}
                dataSource={productInfo.images}
                renderItem={(item) => (
                  <List.Item>
                    <div
                      className={`cursor-pointer ${
                        mainImage == item.url
                          ? "border-4 border-blue-400"
                          : "border-2"
                      }`}
                      onClick={() => {
                        setMainImage(item.url);
                      }}
                    >
                      <img
                        className="h-14 w-full object-contain"
                        src={item.url}
                        alt={item.url}
                      />
                    </div>
                  </List.Item>
                )}
              />
            </div>

            <div className="bg-white h-fit shadow-md p-4 z-50">
              {/* <img
                className="h-[500px] w-[500px] object-contain"
                src={mainImage}
                alt={productInfo.name}
              /> */}

              <ReactImageMagnify
                {...{
                  smallImage: {
                    alt: productInfo.name,
                    isFluidWidth: true,
                    // width: 500,
                    // height: 500,
                    src: mainImage,
                    // src: mainImage + "?width=500&height=500",
                  },
                  largeImage: {
                    src: mainImage,
                    // width: mainImageInfo.width * 0.8,
                    // height: mainImageInfo.height * 0.8,
                    width: mainImageInfo.width,
                    height: mainImageInfo.height,
                  },
                  enlargedImageContainerDimensions: {
                    // width: "160%",
                    // height: "120%",
                    width: "200%",
                    height: "100%",
                  },
                  isHintEnabled: true,
                  // Hover to Zoom
                  hintTextMouse: "Tr·ªè ƒë·ªÉ ph√≥ng to",
                  shouldHideHintAfterFirstActivation: false,
                  // imageClassName: "max-w-[550px]",
                  // enlargedImageContainerClassName:
                  //   "h-[500px] w-[500px] object-fill",
                }}
              />
            </div>
          </Flex>
          {/* desc */}

          <div className="p-4 min-w-[450px] lg:w-[600px]">
            {productInfo._id == null && <Skeleton active />}

            <div className="text-sm">
              Th∆∞∆°ng hi·ªáu / Shop:{" "}
              <Link href="" className="text-blue-500">
                Ecovacs
              </Link>
            </div>

            <div className="font-bold uppercase text-lg">
              {productInfo.name}
            </div>

            <Flex
              gap="small"
              style={{ lineHeight: 2, marginTop: 2, alignContent: "center" }}
            >
              <Rate
                disabled
                allowHalf
                defaultValue={4.5}
                style={{ padding: 5 }}
              />
              <div className="font-bold uppercase text-xl">
                {productInfo.avgRating}
              </div>
              <div className="text-xs font-light mt-2">
                ({numberOfReview} ƒë√°nh gi√°)
              </div>
              <Divider
                type="vertical"
                style={{ height: "auto", border: "0.25px solid silver" }}
              />
              <div className="font-light">ƒê√£ b√°n 5000+</div>
            </Flex>

            <div className="flex flex-row gap-3 my-2">
              <div className="line-through text-gray-600 uppercase text-xl md:text-2xl lg:text-2xl">
                {/* {productInfo.originalPrice} ƒê */}
                {priceIndex(productInfo.originalPrice)}
              </div>
              <div className="font-bold text-red-500 uppercase text-xl md:text-2xl lg:text-2xl">
                {priceIndex(productInfo.finalPrice)}
              </div>
              {/* <div className="text-red-500 uppercase text-xs mt-1">-50%</div> */}
            </div>
            {/* sub category tags */}
            {/* <div className="capitalize text-xs mt-5">Sub-category:</div>
            <Tag>
              <a href="https://github.com/ant-design/ant-design/issues/1862">
                ƒêi·ªán m√°y - ƒêi·ªán gia d·ª•ng
              </a>
            </Tag>
            <Tag>
              <a href="https://github.com/ant-design/ant-design/issues/1862">
                Thi·∫øt b·ªã vƒÉn ph√≤ng
              </a>
            </Tag> */}
            {/* sub category tags */}

            {/* add Link later if use */}
            {/* <div className="flex flex-col gap-3">
              <div className="font-semibold pt-5">D·ªãch v·ª• b·ªï sung</div>
              <div className="bg-white shadow-md max-w-1/4 h-fit p-4 cursor-pointer">
                Thay ƒë·ªïi Th√¥ng tin v·∫≠n chuy·ªÉn
              </div>
              <div className="bg-white shadow-md max-w-1/4 h-fit p-4 cursor-pointer">
                ∆Øu ƒë√£i, m√£ gi·∫£m gi√°
              </div>
            </div> */}

            <div className="grid grid-cols-4">
              <div className="col-span-1 col-start-1 font-bold pt-5">
                T√¨nh tr·∫°ng:{" "}
              </div>
              <div className="col-span-1 col-start-2 pt-5">C√≤n h√†ng</div>
              <div className="col-span-1 col-start-1 font-bold pt-5">
                S·ªë l∆∞·ª£ng:{" "}
              </div>
              <div className="col-span-1 col-start-2 pt-5">124332</div>
            </div>
          </div>
        </div>
        {/* related products to buy with  */}
        <div className="font-semibold px-5 text-md">
          S·∫£n ph·∫©m c√≥ th·ªÉ k·∫øt h·ª£p
        </div>

        <ComboList
          totalPrice={totalPrice}
          totalComboPrice={totalComboPrice}
          updateTotalComboPrice={(price) => {
            setTotalComboPrice(price);
          }}
          comboIdList={comboIdList}
          setComboIdList={setComboIdList}
        />

        {/* tabs, descriptions and review summary */}
        <div className="my-5">
          <Tabs
            defaultActiveKey="1"
            type="card"
            items={tabItems.map((item, i) => {
              //   const id = String(i + 1);
              return {
                label: item.label,
                key: item.key,
                children: item.children,
              };
            })}
          />
        </div>
      </div>
      <div className="col-span-3 my-10 lg:col-span-2">
        <FloatingCartForm
          handleCartDetail={setOpen}
          numberOfItem={numberOfItem}
          updateItemNumber={setNumberOfItem}
          totalPrice={totalPrice}
        />
      </div>
      <div className="col-span-5 lg:col-span-6">
        {/* reviews */}
        <Divider>Kh√°ch h√†ng ƒë√°nh gi√°</Divider>

        <ReviewList setNumberOfReview={setNumberOfReview} />

        <FloatButton.Group>
          <FloatButton
            icon={<GiShoppingCart />}
            tooltip={<div>Xem chi ti·∫øt</div>}
            // badge={{ count: 23, overflowCount: 999 }}
            onClick={showModal}
          />
          <FloatButton.BackTop tooltip={<div>Move to Top</div>} />
        </FloatButton.Group>

        <CartSummaryModal
          open={open}
          setOpen={setOpen}
          totalPrice={totalPrice}
          mainProductId={productInfo._id}
          mainProductPrice={productInfo.finalPrice}
          numberOfItem={numberOfItem}
          comboIdList={comboIdList}
          totalComboPrice={totalComboPrice}
        />
      </div>
    </div>
  );
}

// price
export const priceIndex = (price: number) => {
  return price.toLocaleString("vi-VN", {
    style: "currency",
    currency: "VND",
    minimumFractionDigits: 0,
  });
};
